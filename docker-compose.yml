version: "3.8"

services:
  app:
    build:
      context: ./FlanerMagazineCms/
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    restart: always
    networks:
      - local

  postgres:
    hostname: "${POSTGRES_HOST_NAME}"
    container_name: "${POSTGRES_HOST_NAME}"
    image: postgres:16
    environment:
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    networks:
      - local
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    hostname: "${REDIS_HOST_NAME}"
    container_name: "${REDIS_HOST_NAME}"
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly no --save 10000 1 --loglevel warning
    volumes:
      - "redis_data:/data"
    networks:
      - local

  python:
    build:
      context: ./backend/
      dockerfile: Dockerfile-python
    environment:
      POSTGRES_HOST_NAME: ${POSTGRES_HOST_NAME}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      APP_PORT: ${APP_PORT}
      APP_INITIAL_SUPERUSER_EMAIL: ${APP_INITIAL_SUPERUSER_EMAIL}
      APP_INITIAL_SUPERUSER_PASSWORD: ${APP_INITIAL_SUPERUSER_PASSWORD}
      SENDER_EMAIL: ${SENDER_EMAIL}
      CLIENT_EMAIL_PASSWORD: ${CLIENT_EMAIL_PASSWORD}
      REDIS_HOST_NAME: ${REDIS_HOST_NAME}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      MONOBANK_PUB_KEY: ${MONOBANK_PUB_KEY}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    networks:
      - local

volumes:
  postgres_data:
  redis_data:

networks:
  local:
    driver: bridge
